{"version":3,"sources":["common/Languages.js","pages/About/About.jsx","common/SectionTypes.js","common/SectionParser.js","common/ReadmeParser.js","common/Extensions.js","pages/Composer/SuggestionsContainer/TypeSectionContainer/TypeSectionContainer.jsx","pages/Composer/SuggestionsContainer/SuggestionsContainer.jsx","pages/Composer/READMEContainer/READMEContainer.jsx","common/alerts.js","common/loading.jsx","pages/Composer/Composer.jsx","serviceWorker.js","index.jsx"],"names":["languagesOptions","map","lang","value","label","About","props","numRepos","history","useHistory","className","id","href","rel","target","options","onChange","o","push","defaultProps","sectionTypes","1","3","4","5","6","7","8","998","999","sectionCodes","Object","keys","groupSectionsByKey","key","sections","groupedSections","length","forEach","section","groupKey","originalValue","Array","isArray","getValueForKey","codeArray","groupSectionsByHeadingLevel","groupSectionsByFirstSectionCode","sortByOccurence","occurences","trimmedTitle","title","trim","readme_file_name","sortableOccurences","sort","titleA","titleB","computeFrequencyByLevel","frequencyByLevel","2","levelSections","level","name","readme","findSectionOccurencesInTree","tree","repoName","headingLevel","heading_level","root","findSectionInTreeRecursion","sectionName","isEqual","children","child","flat","Infinity","filter","searchResult","constructor","findChildren","sectionTitle","treeDict","occurence","sectionURL","trimmedSectionTitle","replace","readmes","arrayIsEqual","a","b","i","isEquivalent","aProps","getOwnPropertyNames","bProps","propName","defineProperty","prototype","depth","this","reduce","toFlatten","concat","TypeSectionContainer","state","selectedSections","findIndex","selectedSection","toggledSection","sectionIndex","splice","setState","onSectionToggle","newSection","renderSection","isSelected","heading","repeat","desiredChildren","desiredChildrenLevel","trees","onClick","toggleSection","type","childSection","sectionCode","popularOccurences","sectionsToParagraph","React","Component","SuggestionsContainer","language","useState","typeSections","setTypeSections","useEffect","code","downloadMarkdownFile","element","document","createElement","file","Blob","getElementById","innerText","URL","createObjectURL","download","body","appendChild","click","READMEContainer","header","markdownTitle","console","log","exampleURL","exampleLink","markdownHeaderToHTML","alertError","text","footer","Swal","fire","icon","Loading","hide","Fragment","Composer","sectionsLoaded","treesLoaded","ref","createRef","match","params","ReactGA","pageview","fetch","process","then","res","json","result","error","loading","Boolean","window","location","hostname","App","initialize","basename","onUpdate","scrollTo","path","exact","component","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2zm+BAoDO,I,QC5CDA,ED4CwB,CAC5B,IACA,KACA,MACA,eACA,MACA,OACA,KACA,SACA,KACA,SACA,OACA,OACA,aACA,SACA,cACA,OACA,MACA,aACA,SACA,OACA,OACA,QACA,QACA,QACA,aACA,gBACA,KACA,OACA,WACA,OACA,eACA,MACA,qBACA,OACA,aACA,OACA,KACA,QACA,gBACA,kBACA,OACA,cACA,mBACA,QACA,aACA,OACA,gBACA,MACA,2BACA,cACA,MACA,WACA,MACA,QACA,UACA,UACA,WACA,YACA,MACA,SACA,aACA,SACA,WACA,MACA,YACA,QACA,YACA,OACA,UACA,SACA,QACA,QACA,UACA,QACA,aACA,WACA,WACA,MACA,SACA,YACA,eACA,eACA,YACA,eACA,eACA,cACA,WACA,SACA,SACA,UACA,QACA,MACA,QACA,UACA,cACA,QACA,QACA,QACA,UACA,oBACA,iCACA,QACA,QACA,aACA,SACA,aACA,iBACA,UACA,cACA,2BACA,mBACA,UACA,OACA,MACA,cACA,SACA,UACA,OACA,SACA,kBACA,eACA,MACA,OACA,MACA,YACA,cACA,OACA,UACA,SACA,IACA,YACA,QACA,cACA,YACA,UACA,QACA,OACA,2BACA,YACA,kBACA,WACA,aACA,aACA,SACA,QACA,IACA,QACA,YACA,OACA,KACA,iBACA,MACA,UACA,eACA,uBACA,MACA,SACA,MACA,MACA,aACA,cACA,MACA,KACA,SACA,KACA,KACA,SACA,QACA,SACA,QACA,cACA,gBACA,eACA,OACA,SACA,OACA,YACA,QACA,UACA,oBACA,YACA,aACA,QACA,UACA,SACA,sBACA,OACA,OACA,MACA,0BACA,MACA,WACA,SACA,eACA,QACA,SACA,gBACA,gBACA,eACA,kBACA,UACA,iBACA,aACA,OACA,QACA,mCACA,KACA,UACA,OACA,OACA,QACA,SACA,wBACA,0BACA,UACA,iBACA,sBACA,OACA,OACA,aACA,UACA,UACA,UACA,OACA,MACA,SACA,OACA,QACA,WACA,WACA,WACA,WACA,aACA,OACA,OACA,KACA,QACA,MACA,QACA,cACA,WACA,eACA,WACA,MACA,aACA,KACA,OACA,UACA,WACA,gBACA,IACA,SACA,kBACA,oBACA,iBACA,QACA,QACA,QACA,YACA,QACA,KACA,OACA,qBACA,QACA,SACA,SACA,UACA,QACA,mBACA,gBACA,eACA,sBACA,kBACA,MACA,MACA,QACA,UACA,OACA,QACA,QACA,OACA,OACA,MACA,MACA,WACA,QACA,gBACA,sBACA,SACA,gBACA,wBACA,mBACA,aACA,OACA,QACA,UACA,UACA,SACA,aACA,MACA,iBACA,MACA,IACA,KACA,UACA,YACA,WACA,OACA,WACA,QACA,OACA,cACA,SACA,YACA,MACA,YACA,aACA,UACA,QACA,QACA,qCACA,mCACA,QACA,QACA,cACA,OACA,WACA,WACA,WACA,2BACA,SACA,UACA,aACA,wBACA,OACA,OACA,OACA,MACA,QACA,OACA,WACA,SACA,SACA,OACA,MACA,UACA,UACA,OACA,OACA,UACA,cACA,UACA,UACA,WACA,QACA,MACA,QACA,MACA,MACA,KACA,aACA,OACA,KACA,QACA,WACA,WACA,UACA,gCACA,gBACA,cACA,eACA,QACA,OACA,UACA,MACA,MACA,OACA,oBACA,SACA,eACA,WACA,mBACA,WACA,yBACA,wBACA,MACA,KACA,UACA,KACA,KACA,MACA,UACA,SACA,kBACA,iCACA,SACA,OACA,SACA,OACA,MACA,SACA,WACA,WACA,OACA,WACA,UACA,QACA,MACA,QACA,aACA,OACA,UACA,aACA,cACA,eACA,SACA,aACA,WACA,SACA,iBACA,kBACA,aACA,MACA,SACA,YACA,YACA,aACA,iBACA,mBACA,IACA,KACA,QACA,MACA,YACA,QACA,IACA,SACA,QACA,OACA,OACA,SACA,iBACA,OACA,kBACA,YACA,SACA,QACA,aACA,MACA,UACA,iBACA,qBACA,SACA,eACA,WACA,mBACA,OACA,mBACA,OACA,OACA,YACA,iBACA,aACA,OACA,eACA,QACA,MACA,WACA,SACA,OACA,YACA,MACA,OACA,QACA,SACA,SACA,OACA,MACA,OACA,iBACA,YACA,eACA,OACA,QACA,cACA,QACA,QACA,OACA,QACA,YACA,SACA,OACA,MACA,WACA,QACA,aACA,SACA,uBACA,MACA,MACA,QACA,WACA,mBACA,aACA,OACA,cACA,WACA,QACA,OACA,iBACA,SACA,cACA,UACA,gBACA,SACA,MACA,OACA,gBACA,MACA,OACA,MACA,QACA,MACA,UACA,OACA,UACA,sBACA,SACA,aACA,MACA,OACA,OACA,MACA,MACA,SACA,SACA,OACA,MACA,gBACA,qBACA,gBACA,gBACA,MACA,eACA,QACA,IACA,OACA,oBACA,MACA,WACA,MACA,UACA,OACA,gBACA,aACA,cACA,oBACA,OACA,MACA,qBACA,mBACA,MACA,wBACA,cACA,SACA,SACA,cACA,WACA,2BACA,OACA,SACA,+BACA,WACA,yBACA,WACA,MACA,QACA,KACA,WACA,MACA,oBACA,OACA,QACA,SACA,QACA,SACA,KACA,OACA,QACA,OACA,OACA,OACA,OACA,YACA,MACA,OACA,YACA,SACA,MACA,MACA,SCroBsCC,KAAI,SAAAC,GAAI,MAAK,CAAEC,MAAOD,EAAME,MAAOF,MAG3E,SAASG,EAAMC,GACb,IAAQC,EAAaD,EAAbC,SACFC,EAAUC,cAEhB,OACE,yBAAKC,UAAU,SACb,yBAAKC,GAAG,gBACN,kDACA,4QAKA,2YAMA,oUAOF,yBAAKA,GAAG,kBACN,8DACA,uDAEE,6BACE,uBACEC,KAAK,4CACLC,IAAI,sBACJC,OAAO,UAHT,QAHJ,kNAeA,4BACE,4BACE,0CADF,8CAIA,4BACE,wCADF,wDAIA,4BACE,yCADF,2CAIA,4BACE,wCADF,yDAIA,4BACE,yCADF,iFAIA,4BACE,gDADF,0DAIA,4BACE,kDADF,oFAIA,4BACE,2CADF,uEAKF,4EAEE,6BACE,uBACEF,KAAK,8CACLC,IAAI,sBACJC,OAAO,UAHT,QAHJ,uDAYGP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","file":"static/js/main.a5f69abf.chunk.js","sourcesContent":["import swiftSections from './languages/swift_sections';\nimport * as swiftReadmesTrees from './languages/readmes_trees.json';\n\nimport pythonSections from './languages/python_sections';\nimport * as pythonReadmesTrees from './languages/python_trees.json';\n\nimport csharpSections from './languages/csharp_sections';\nimport * as csharpReadmesTrees from './languages/csharp_trees.json';\n\nimport cppSections from './languages/cpp_sections';\nimport * as cppReadmesTrees from './languages/cpp_trees.json';\n\nconst supportedLanguages = {\n  swift: {\n    presentationName: 'Swift',\n    sections: swiftSections,\n    trees: swiftReadmesTrees,\n  },\n  python: {\n    presentationName: 'Python',\n    sections: pythonSections,\n    trees: pythonReadmesTrees,\n  },\n  csharp: {\n    presentationName: 'C#',\n    sections: csharpSections,\n    trees: csharpReadmesTrees,\n  },\n  cpp: {\n    presentationName: 'C++',\n    sections: cppSections,\n    trees: cppReadmesTrees,\n  },\n};\n\nexport function getSections(language) {\n  return [];\n  return supportedLanguages[language].sections;\n}\n\nexport function getTrees(language) {\n  return {};\n  return supportedLanguages[language].trees.default;\n}\n\nexport function getLanguages() {\n  return Object.keys(supportedLanguages).map(key => ({\n    presentationName: supportedLanguages[key].presentationName,\n    urlName: key,\n  }));\n}\n\nexport const githubLaguages = [\n  'C',\n  'C#',\n  'C++',\n  'CoffeeScript',\n  'CSS',\n  'Dart',\n  'DM',\n  'Elixir',\n  'Go',\n  'Groovy',\n  'HTML',\n  'Java',\n  'JavaScript',\n  'Kotlin',\n  'Objective-C',\n  'Perl',\n  'PHP',\n  'PowerShell',\n  'Python',\n  'Ruby',\n  'Rust',\n  'Scala',\n  'Shell',\n  'Swift',\n  'TypeScript',\n  '1C Enterprise',\n  '4D',\n  'ABAP',\n  'ABAP CDS',\n  'ABNF',\n  'ActionScript',\n  'Ada',\n  'Adobe Font Metrics',\n  'Agda',\n  'AGS Script',\n  'AIDL',\n  'AL',\n  'Alloy',\n  'Alpine Abuild',\n  'Altium Designer',\n  'AMPL',\n  'AngelScript',\n  'Ant Build System',\n  'ANTLR',\n  'ApacheConf',\n  'Apex',\n  'API Blueprint',\n  'APL',\n  'Apollo Guidance Computer',\n  'AppleScript',\n  'Arc',\n  'AsciiDoc',\n  'ASL',\n  'ASN.1',\n  'ASP.NET',\n  'AspectJ',\n  'Assembly',\n  'Asymptote',\n  'ATS',\n  'Augeas',\n  'AutoHotkey',\n  'AutoIt',\n  'Avro IDL',\n  'Awk',\n  'Ballerina',\n  'BASIC',\n  'Batchfile',\n  'Beef',\n  'Befunge',\n  'BibTeX',\n  'Bicep',\n  'Bison',\n  'BitBake',\n  'Blade',\n  'BlitzBasic',\n  'BlitzMax',\n  'Bluespec',\n  'Boo',\n  'Boogie',\n  'Brainfuck',\n  'Brightscript',\n  'Browserslist',\n  'C-ObjDump',\n  'C2hs Haskell',\n  'Cabal Config',\n  \"Cap'n Proto\",\n  'CartoCSS',\n  'Ceylon',\n  'Chapel',\n  'Charity',\n  'ChucK',\n  'CIL',\n  'Cirru',\n  'Clarion',\n  'Classic ASP',\n  'Clean',\n  'Click',\n  'CLIPS',\n  'Clojure',\n  'Closure Templates',\n  'Cloud Firestore Security Rules',\n  'CMake',\n  'COBOL',\n  'CODEOWNERS',\n  'CodeQL',\n  'ColdFusion',\n  'ColdFusion CFC',\n  'COLLADA',\n  'Common Lisp',\n  'Common Workflow Language',\n  'Component Pascal',\n  'CoNLL-U',\n  'Cool',\n  'Coq',\n  'Cpp-ObjDump',\n  'Creole',\n  'Crystal',\n  'CSON',\n  'Csound',\n  'Csound Document',\n  'Csound Score',\n  'CSV',\n  'Cuda',\n  'CUE',\n  'Cue Sheet',\n  'cURL Config',\n  'CWeb',\n  'Cycript',\n  'Cython',\n  'D',\n  'D-ObjDump',\n  'Dafny',\n  'Darcs Patch',\n  'DataWeave',\n  'desktop',\n  'Dhall',\n  'Diff',\n  'DIGITAL Command Language',\n  'dircolors',\n  'DirectX 3D File',\n  'DNS Zone',\n  'Dockerfile',\n  'Dogescript',\n  'DTrace',\n  'Dylan',\n  'E',\n  'Eagle',\n  'Easybuild',\n  'EBNF',\n  'eC',\n  'Ecere Projects',\n  'ECL',\n  'ECLiPSe',\n  'EditorConfig',\n  'Edje Data Collection',\n  'edn',\n  'Eiffel',\n  'EJS',\n  'Elm',\n  'Emacs Lisp',\n  'EmberScript',\n  'EML',\n  'EQ',\n  'Erlang',\n  'F#',\n  'F*',\n  'Factor',\n  'Fancy',\n  'Fantom',\n  'Faust',\n  'FIGlet Font',\n  'Filebench WML',\n  'Filterscript',\n  'fish',\n  'Fluent',\n  'FLUX',\n  'Formatted',\n  'Forth',\n  'Fortran',\n  'Fortran Free Form',\n  'FreeBasic',\n  'FreeMarker',\n  'Frege',\n  'Futhark',\n  'G-code',\n  'Game Maker Language',\n  'GAML',\n  'GAMS',\n  'GAP',\n  'GCC Machine Description',\n  'GDB',\n  'GDScript',\n  'GEDCOM',\n  'Gemfile.lock',\n  'Genie',\n  'Genshi',\n  'Gentoo Ebuild',\n  'Gentoo Eclass',\n  'Gerber Image',\n  'Gettext Catalog',\n  'Gherkin',\n  'Git Attributes',\n  'Git Config',\n  'GLSL',\n  'Glyph',\n  'Glyph Bitmap Distribution Format',\n  'GN',\n  'Gnuplot',\n  'Golo',\n  'Gosu',\n  'Grace',\n  'Gradle',\n  'Grammatical Framework',\n  'Graph Modeling Language',\n  'GraphQL',\n  'Graphviz (DOT)',\n  'Groovy Server Pages',\n  'Hack',\n  'Haml',\n  'Handlebars',\n  'HAProxy',\n  'Harbour',\n  'Haskell',\n  'Haxe',\n  'HCL',\n  'HiveQL',\n  'HLSL',\n  'HolyC',\n  'HTML+ECR',\n  'HTML+EEX',\n  'HTML+ERB',\n  'HTML+PHP',\n  'HTML+Razor',\n  'HTTP',\n  'HXML',\n  'Hy',\n  'HyPhy',\n  'IDL',\n  'Idris',\n  'Ignore List',\n  'IGOR Pro',\n  'ImageJ Macro',\n  'Inform 7',\n  'INI',\n  'Inno Setup',\n  'Io',\n  'Ioke',\n  'IRC log',\n  'Isabelle',\n  'Isabelle ROOT',\n  'J',\n  'Jasmin',\n  'Java Properties',\n  'Java Server Pages',\n  'JavaScript+ERB',\n  'JFlex',\n  'Jinja',\n  'Jison',\n  'Jison Lex',\n  'Jolie',\n  'jq',\n  'JSON',\n  'JSON with Comments',\n  'JSON5',\n  'JSONiq',\n  'JSONLD',\n  'Jsonnet',\n  'Julia',\n  'Jupyter Notebook',\n  'Kaitai Struct',\n  'KiCad Layout',\n  'KiCad Legacy Layout',\n  'KiCad Schematic',\n  'Kit',\n  'KRL',\n  'Kusto',\n  'LabVIEW',\n  'Lark',\n  'Lasso',\n  'Latte',\n  'Lean',\n  'Less',\n  'Lex',\n  'LFE',\n  'LilyPond',\n  'Limbo',\n  'Linker Script',\n  'Linux Kernel Module',\n  'Liquid',\n  'Literate Agda',\n  'Literate CoffeeScript',\n  'Literate Haskell',\n  'LiveScript',\n  'LLVM',\n  'Logos',\n  'Logtalk',\n  'LOLCODE',\n  'LookML',\n  'LoomScript',\n  'LSL',\n  'LTspice Symbol',\n  'Lua',\n  'M',\n  'M4',\n  'M4Sugar',\n  'Macaulay2',\n  'Makefile',\n  'Mako',\n  'Markdown',\n  'Marko',\n  'Mask',\n  'Mathematica',\n  'MATLAB',\n  'Maven POM',\n  'Max',\n  'MAXScript',\n  'mcfunction',\n  'Mercury',\n  'Meson',\n  'Metal',\n  'Microsoft Developer Studio Project',\n  'Microsoft Visual Studio Solution',\n  'MiniD',\n  'Mirah',\n  'mIRC Script',\n  'MLIR',\n  'Modelica',\n  'Modula-2',\n  'Modula-3',\n  'Module Management System',\n  'Monkey',\n  'Moocode',\n  'MoonScript',\n  'Motorola 68K Assembly',\n  'MQL4',\n  'MQL5',\n  'MTML',\n  'MUF',\n  'mupad',\n  'Muse',\n  'Mustache',\n  'Myghty',\n  'nanorc',\n  'NASL',\n  'NCL',\n  'Nearley',\n  'Nemerle',\n  'NEON',\n  'nesC',\n  'NetLinx',\n  'NetLinx+ERB',\n  'NetLogo',\n  'NewLisp',\n  'Nextflow',\n  'Nginx',\n  'Nim',\n  'Ninja',\n  'Nit',\n  'Nix',\n  'NL',\n  'NPM Config',\n  'NSIS',\n  'Nu',\n  'NumPy',\n  'Nunjucks',\n  'NWScript',\n  'ObjDump',\n  'Object Data Instance Notation',\n  'Objective-C++',\n  'Objective-J',\n  'ObjectScript',\n  'OCaml',\n  'Odin',\n  'Omgrofl',\n  'ooc',\n  'Opa',\n  'Opal',\n  'Open Policy Agent',\n  'OpenCL',\n  'OpenEdge ABL',\n  'OpenQASM',\n  'OpenRC runscript',\n  'OpenSCAD',\n  'OpenStep Property List',\n  'OpenType Feature File',\n  'Org',\n  'Ox',\n  'Oxygene',\n  'Oz',\n  'P4',\n  'Pan',\n  'Papyrus',\n  'Parrot',\n  'Parrot Assembly',\n  'Parrot Internal Representation',\n  'Pascal',\n  'Pawn',\n  'PEG.js',\n  'Pep8',\n  'Pic',\n  'Pickle',\n  'PicoLisp',\n  'PigLatin',\n  'Pike',\n  'PlantUML',\n  'PLpgSQL',\n  'PLSQL',\n  'Pod',\n  'Pod 6',\n  'PogoScript',\n  'Pony',\n  'PostCSS',\n  'PostScript',\n  'POV-Ray SDL',\n  'PowerBuilder',\n  'Prisma',\n  'Processing',\n  'Proguard',\n  'Prolog',\n  'Propeller Spin',\n  'Protocol Buffer',\n  'Public Key',\n  'Pug',\n  'Puppet',\n  'Pure Data',\n  'PureBasic',\n  'PureScript',\n  'Python console',\n  'Python traceback',\n  'q',\n  'Q#',\n  'QMake',\n  'QML',\n  'Qt Script',\n  'Quake',\n  'R',\n  'Racket',\n  'Ragel',\n  'Raku',\n  'RAML',\n  'Rascal',\n  'Raw token data',\n  'RDoc',\n  'Readline Config',\n  'REALbasic',\n  'Reason',\n  'Rebol',\n  'Record Jar',\n  'Red',\n  'Redcode',\n  'Redirect Rules',\n  'Regular Expression',\n  \"Ren'Py\",\n  'RenderScript',\n  'ReScript',\n  'reStructuredText',\n  'REXX',\n  'Rich Text Format',\n  'Ring',\n  'Riot',\n  'RMarkdown',\n  'RobotFramework',\n  'robots.txt',\n  'Roff',\n  'Roff Manpage',\n  'Rouge',\n  'RPC',\n  'RPM Spec',\n  'RUNOFF',\n  'Sage',\n  'SaltStack',\n  'SAS',\n  'Sass',\n  'Scaml',\n  'Scheme',\n  'Scilab',\n  'SCSS',\n  'sed',\n  'Self',\n  'SELinux Policy',\n  'ShaderLab',\n  'ShellSession',\n  'Shen',\n  'Sieve',\n  'Singularity',\n  'Slash',\n  'Slice',\n  'Slim',\n  'Smali',\n  'Smalltalk',\n  'Smarty',\n  'SmPL',\n  'SMT',\n  'Solidity',\n  'Soong',\n  'SourcePawn',\n  'SPARQL',\n  'Spline Font Database',\n  'SQF',\n  'SQL',\n  'SQLPL',\n  'Squirrel',\n  'SRecode Template',\n  'SSH Config',\n  'Stan',\n  'Standard ML',\n  'Starlark',\n  'Stata',\n  'STON',\n  'StringTemplate',\n  'Stylus',\n  'SubRip Text',\n  'SugarSS',\n  'SuperCollider',\n  'Svelte',\n  'SVG',\n  'SWIG',\n  'SystemVerilog',\n  'Tcl',\n  'Tcsh',\n  'Tea',\n  'Terra',\n  'TeX',\n  'Texinfo',\n  'Text',\n  'Textile',\n  'TextMate Properties',\n  'Thrift',\n  'TI Program',\n  'TLA',\n  'TOML',\n  'TSQL',\n  'TSV',\n  'TSX',\n  'Turing',\n  'Turtle',\n  'Twig',\n  'TXL',\n  'Type Language',\n  'Unified Parallel C',\n  'Unity3D Asset',\n  'Unix Assembly',\n  'Uno',\n  'UnrealScript',\n  'UrWeb',\n  'V',\n  'Vala',\n  'Valve Data Format',\n  'VBA',\n  'VBScript',\n  'VCL',\n  'Verilog',\n  'VHDL',\n  'Vim Help File',\n  'Vim script',\n  'Vim Snippet',\n  'Visual Basic .NET',\n  'Volt',\n  'Vue',\n  'Wavefront Material',\n  'Wavefront Object',\n  'wdl',\n  'Web Ontology Language',\n  'WebAssembly',\n  'WebIDL',\n  'WebVTT',\n  'Wget Config',\n  'Wikitext',\n  'Windows Registry Entries',\n  'wisp',\n  'Wollok',\n  'World of Warcraft Addon Data',\n  'X BitMap',\n  'X Font Directory Index',\n  'X PixMap',\n  'X10',\n  'xBase',\n  'XC',\n  'XCompose',\n  'XML',\n  'XML Property List',\n  'Xojo',\n  'Xonsh',\n  'XPages',\n  'XProc',\n  'XQuery',\n  'XS',\n  'XSLT',\n  'Xtend',\n  'Yacc',\n  'YAML',\n  'YANG',\n  'YARA',\n  'YASnippet',\n  'ZAP',\n  'Zeek',\n  'ZenScript',\n  'Zephir',\n  'Zig',\n  'ZIL',\n  'Zimpl',\n];\n\nexport default { supportedLanguages, getSections };\n","/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useHistory } from 'react-router-dom';\nimport { getLanguages, githubLaguages } from '../../common/Languages';\nimport './About.css';\nimport Select from 'react-select';\n\nconst languagesOptions = githubLaguages.map(lang => ({ value: lang, label: lang }));\n\n\nfunction About(props) {\n  const { numRepos } = props;\n  const history = useHistory();\n\n  return (\n    <div className=\"About\">\n      <div id=\"titleSection\">\n        <h1>Data Driven README</h1>\n        <p>\n          Software is meant to be used, and the first step towards making your project usable is having a good\n          README. If you&apos;re here that probably means you already know that, but what you might not know is\n          what should be included in your README?\n        </p>\n        <p>\n          There are several opinionated guides about how to write a README. However, with an ever-growing number\n          of programming languages, tools, and processes, the idea of having one definitive generic guide is bound\n          to become outdated, as it does not take into consideration the specific details and nuances of projects\n          built on different languages, for different systems.\n        </p>\n        <p>\n          This tool will not write a README for you, but it will give you suggestions of what content should be\n          included in your document, according to which programming language you&apos;re using. All suggestions\n          are derived from live data from the most popular GitHub repositories and scientific research.\n        </p>\n      </div>\n\n      <div id=\"contentSection\">\n        <h1>What should be in your README?</h1>\n        <p>\n          A study conducted in 2018\n          <sup>\n            <a\n              href=\"https://doi.org/10.1007/s10664-018-9660-3\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              [1]\n            </a>\n          </sup>\n          &nbsp;answered this question by querying GitHub repos and analyzing the content of each section from\n          their READMEs. They found that the content of those sections can be classified in the following\n          categories:\n        </p>\n        <ol>\n          <li>\n            <strong>WHAT: </strong>\n            An introduction on what your project does.\n          </li>\n          <li>\n            <strong>WHY:</strong>\n            The motivation behind your project, it&apos;s advantages.\n          </li>\n          <li>\n            <strong>HOW: </strong>\n            Instructions on how to use the project.\n          </li>\n          <li>\n            <strong>WHEN</strong>\n            The status of the project, it&apos;s versions and roadmap.\n          </li>\n          <li>\n            <strong>WHO: </strong>\n            The people responsible for the project, license information, code of conduct.\n          </li>\n          <li>\n            <strong>REFERENCES: </strong>\n            External documentation, support, and related projects.\n          </li>\n          <li>\n            <strong>CONTRIBUTION: </strong>\n            Instructions on how to contribute to the project (sometimes a stand-alone file).\n          </li>\n          <li>\n            <strong>OTHER: </strong>\n            Any type of content that does not fit any of the above categories.\n          </li>\n        </ol>\n        <p>\n          Using a classifier designed by the researchers\n          <sup>\n            <a\n              href=\"https://github.com/gprana/READMEClassifier/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              [2]\n            </a>\n          </sup>\n                &nbsp;we classify the sections of READMEs from the&nbsp;\n          {numRepos}\n          &nbsp;most starred repositories written in the programming language of your choice, so they can be\n          grouped according to its content and heading level, and passed as suggestions so you can select the ones\n          that apply to your project, knowing how often they are used by others.\n        </p>\n      </div>\n\n      {numRepos === '' && (\n      <div id=\"links\">\n        <h1>Supported languages</h1>\n        <p>\n          This tool is meant to work with every programming language that has projects on GitHub. Choose any\n          language below and you'll be redirected to compose a new README file based on selected\n          language.\n          {' '}\n        </p>\n        <p>\n          <small>\n            <b>\n              If you can't find some language, please open a new issue on our &nbsp;\n              <a href=\"https://github.com/hpbl/WRITEME\" target=\"_blank\" rel=\"noopener noreferrer\">\n                {' '}\n                Github\n                repository\n              </a>\n            </b>\n          </small>\n        </p>\n        <Select\n          options={languagesOptions}\n          onChange={(o) => {\n            history.push(`/composer/${o.value}`);\n          }}\n        />\n      </div>\n      )}\n    </div>\n  );\n}\n\nAbout.propTypes = {\n  numRepos: PropTypes.string,\n};\n\nAbout.defaultProps = {\n  numRepos: '',\n};\n\nexport default About;\n","export const sectionTypes = {\n  1: 'WHAT/WHY',\n  3: 'HOW',\n  4: 'WHEN',\n  5: 'WHO',\n  6: 'REFERENCES',\n  7: 'CONTRIBUTION',\n  8: 'OTHER',\n  998: 'UNCLASSIFIED',\n  999: 'EXCLUSION',\n};\n\nexport const sectionCodes = Object.keys(sectionTypes);\n","function getValueForKey(key, section) {\n  const originalValue = section[key];\n\n  if (Array.isArray(originalValue)) {\n    return originalValue[0];\n  }\n\n  return originalValue;\n}\n\nfunction groupSectionsByKey(key, sections) {\n  const groupedSections = {};\n  if (sections.length === 0) {\n    return groupedSections;\n  }\n  sections.forEach((section) => {\n    const groupKey = getValueForKey(key, section);\n    const codeArray = groupedSections[groupKey];\n\n    if (codeArray) {\n      codeArray.push(section);\n    } else {\n      groupedSections[groupKey] = [section];\n    }\n  });\n\n  return groupedSections;\n}\n\n\n/* Grouping by Keys */\nexport function groupSectionsByHeadingLevel(sections) {\n  return groupSectionsByKey('heading_level', sections);\n}\n\nexport function groupSectionsByFirstSectionCode(sections) {\n  return groupSectionsByKey('section_codes', sections);\n}\n\n/* Compute occurences and remove duplicates */\nexport function sortByOccurence(sections) {\n  const occurences = {};\n\n  if (sections.length === 0) {\n    return [];\n  }\n  sections.forEach((section) => {\n    const trimmedTitle = section.title.trim();\n    if (trimmedTitle !== '') {\n      if (occurences[trimmedTitle]) {\n        occurences[trimmedTitle].push(section.readme_file_name);\n      } else {\n        occurences[trimmedTitle] = [section.readme_file_name];\n      }\n    }\n  });\n\n  const sortableOccurences = Object.keys(occurences).map(title => (\n    [title, occurences[title].length, occurences[title]]));\n\n  sortableOccurences.sort((titleA, titleB) => titleB[1] - titleA[1]);\n\n  return sortableOccurences;\n}\n\n/* Groups section (from tree) by level and computes the frequency of occurences\n    input: [{name, level}, ...]\n    output: [{name: occurences}, ...] (one for each heading level - start in 0)\n*/\nexport function computeFrequencyByLevel(sections) {\n  const frequencyByLevel = {\n    1: {}, 2: {}, 3: {}, 4: {}, 5: {}, 6: {},\n  };\n\n  if (sections.length === 0) {\n    return [];\n  }\n\n  sections.forEach((section) => {\n    const levelSections = frequencyByLevel[section.level];\n    const trimmedTitle = section.name.trim();\n    if (trimmedTitle !== '') {\n      if (levelSections[trimmedTitle]) {\n        levelSections[trimmedTitle].push(section.readme);\n      } else {\n        levelSections[trimmedTitle] = [section.readme];\n      }\n    }\n  });\n\n  return Object.keys(frequencyByLevel).map((level) => {\n    const levelSections = frequencyByLevel[level];\n    const sortableOccurences = Object.keys(levelSections)\n      .map(title => [title, levelSections[title].length, levelSections[title]]);\n    sortableOccurences.sort((titleA, titleB) => titleB[1] - titleA[1]);\n    return sortableOccurences;\n  });\n}\n\n\nexport default {\n  groupSectionsByHeadingLevel,\n  groupSectionsByFirstSectionCode,\n  sortByOccurence,\n  computeFrequencyByLevel,\n};\n","/* eslint no-param-reassign: 0 */\nimport { getTrees } from './Languages';\n\nfunction isEqual(sectionName, headingLevel, tree) {\n  return (tree.name === sectionName && tree.level === headingLevel);\n}\n\nfunction findSectionInTreeRecursion(sectionName, headingLevel, root, repoName) {\n  if (root === []) {\n    return [null];\n  }\n\n  if (isEqual(sectionName, headingLevel, root)) {\n    root.readme = repoName;\n    return [root];\n  }\n\n  return root.children\n    .map(child => findSectionInTreeRecursion(sectionName, headingLevel, child, repoName));\n}\n\nexport function findSectionOccurencesInTree(section, tree, repoName) {\n  const { title, heading_level: headingLevel } = section;\n  return tree.map(root => findSectionInTreeRecursion(title, headingLevel, root, repoName))\n    .flat(Infinity)\n    .filter(searchResult => searchResult.constructor === Object);\n}\n\nexport function findChildren(sectionTitle, headingLevel, treeDict) {\n  const section = { title: sectionTitle, heading_level: headingLevel };\n  const repos = Object.keys(treeDict);\n  return repos.map(repoName => findSectionOccurencesInTree(section, treeDict[repoName], repoName))\n    .flat(Infinity)\n    .map((occurence) => {\n      occurence.children.forEach((child) => { child.readme = occurence.readme; });\n      return occurence.children;\n    })\n    .filter(occurence => occurence.length > 0);\n}\n\nexport function sectionURL(section) {\n  const baseURL = 'https://github.com/';\n  const trimmedSectionTitle = section.sectionTitle.replace(/ /g, '-');\n\n  return section.readmes.map(readme => (\n    `${baseURL}${readme.replace('.md', '').replace('.', '/')}#${trimmedSectionTitle}`));\n}\n\nexport function numReposForLanguage(language) {\n  const treeDict = getTrees(language);\n  return Object.keys(treeDict).length;\n}\n\nexport default {\n  findSectionOccurencesInTree, findChildren, sectionURL, numReposForLanguage,\n};\n\n\n/* eslint-disable */\nObject.defineProperty(Array.prototype, 'flat', {\n    value: function(depth = 1) {\n      return this.reduce(function (flat, toFlatten) {\n        return flat.concat((Array.isArray(toFlatten) && (depth>1)) ? toFlatten.flat(depth-1) : toFlatten);\n      }, []);\n    }\n});\n","function arrayIsEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n\n  // If you don't care about the order of the elements inside\n  // the array, you should sort both arrays here.\n  // Please note that calling sort on an array will modify that array.\n  // you might want to clone your array first.\n\n  for (let i = 0; i < a.length; i += 1) {\n    if (a[i] !== b[i]) return false;\n  }\n\n  return true;\n}\n\nexport default function isEquivalent(a, b) {\n  // Create arrays of property names\n  const aProps = Object.getOwnPropertyNames(a);\n  const bProps = Object.getOwnPropertyNames(b);\n\n  // If number of properties is different,\n  // objects are not equivalent\n  if (aProps.length !== bProps.length) {\n    return false;\n  }\n\n  for (let i = 0; i < aProps.length; i += 1) {\n    const propName = aProps[i];\n\n    // If values of same property are not equal,\n    // objects are not equivalent\n    if (a[propName] !== b[propName] && !arrayIsEqual(a[propName], b[propName])) {\n      return false;\n    }\n  }\n\n  // If we made it this far, objects\n  // are considered equivalent\n  return true;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TypeSectionContainer.css';\nimport { sectionTypes } from '../../../../common/SectionTypes';\nimport { groupSectionsByHeadingLevel, sortByOccurence, computeFrequencyByLevel } from '../../../../common/SectionParser';\nimport { findChildren } from '../../../../common/ReadmeParser';\nimport isEquivalent from '../../../../common/Extensions';\n\nclass TypeSectionContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      headingLevel: 2,\n      selectedSections: [],\n    };\n  }\n\n  sectionIndex(section) {\n    const { selectedSections } = this.state;\n    return selectedSections.findIndex(selectedSection => (\n      isEquivalent(section, selectedSection)));\n  }\n\n  toggleSection(toggledSection) {\n    const { selectedSections } = this.state;\n    const sectionIndex = this.sectionIndex(toggledSection);\n\n    if (sectionIndex === -1) {\n      selectedSections.push(toggledSection);\n    } else {\n      selectedSections.splice(sectionIndex, 1);\n    }\n\n    this.setState({\n      selectedSections,\n    }, () => {\n      const { onSectionToggle } = this.props;\n      onSectionToggle(toggledSection);\n    });\n  }\n\n  sectionsToParagraph(sections, headingLevel) {\n    return sections.map((section) => {\n      const newSection = { sectionTitle: section[0], headingLevel, readmes: section[2] };\n      const occurence = section[1];\n      return this.renderSection(newSection, occurence);\n    });\n  }\n\n  renderSection(section, occurence) {\n    const isSelected = this.sectionIndex(section) !== -1;\n\n    const className = isSelected ? 'selected' : 'unselected';\n    const heading = '#'.repeat(section.headingLevel);\n    let desiredChildren = [];\n    const desiredChildrenLevel = section.headingLevel + 1;\n\n    const { trees } = this.props;\n\n    if (isSelected) {\n      const children = findChildren(section.sectionTitle, section.headingLevel, trees)\n        .flat(Infinity);\n      const groupedChildren = computeFrequencyByLevel(children);\n      desiredChildren = groupedChildren[desiredChildrenLevel - 1]; // starts on 0\n    }\n\n    return (\n      <div className=\"section\" key={`${section.sectionTitle}-${section[1]}`}>\n        <h2 className={className}>\n          <button onClick={() => this.toggleSection(section)} type=\"button\">\n            {`${heading} ${section.sectionTitle} (${occurence})`}\n          </button>\n        </h2>\n        {isSelected\n          && (\n          <div className=\"children\">\n            {\n              desiredChildren && desiredChildren\n                .map((child) => {\n                  const childSection = {\n                    sectionTitle: child[0],\n                    headingLevel: desiredChildrenLevel,\n                    readmes: child[2],\n                  };\n                  return this.renderSection(childSection, child[1]);\n                })\n            }\n          </div>\n          )\n        }\n      </div>\n    );\n  }\n\n  render() {\n    const { sectionCode, sections } = this.props;\n    const { headingLevel } = this.state;\n\n    const groupedSections = groupSectionsByHeadingLevel(sections);\n    const desiredLevelSections = groupedSections[headingLevel] || [];\n    const sortedOccurences = sortByOccurence(desiredLevelSections);\n    const popularOccurences = sortedOccurences.filter(section => section[1] > 1);\n\n    return (\n      <div className=\"TypeSectionContainer\">\n        <code>\n          type:\n          {' '}\n          {sectionTypes[sectionCode]}\n        </code>\n        {\n          this.sectionsToParagraph(popularOccurences, headingLevel)\n        }\n      </div>\n    );\n  }\n}\n\nTypeSectionContainer.propTypes = {\n  sectionCode: PropTypes.string.isRequired,\n  onSectionToggle: PropTypes.func.isRequired,\n  trees: PropTypes.object.isRequired,\n  sections: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      file_id: PropTypes.string.isRequired,\n      section_id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nTypeSectionContainer.defaultProps = {\n  sections: [],\n};\n\nexport default TypeSectionContainer;\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport './SuggestionsContainer.css';\n\nimport TypeSectionContainer from './TypeSectionContainer/TypeSectionContainer';\nimport { sectionCodes } from '../../../common/SectionTypes';\nimport { groupSectionsByFirstSectionCode } from '../../../common/SectionParser';\n\nfunction SuggestionsContainer(props) {\n  const {\n    onSectionToggle, language, sections, trees,\n  } = props;\n  const [typeSections, setTypeSections] = useState([])\n\n  useEffect(() => {\n    const groupedSections = groupSectionsByFirstSectionCode(sections);\n    setTypeSections(sectionCodes.map(code => (\n        <TypeSectionContainer\n            language={language}\n            trees={trees}\n            sectionCode={code}\n            key={code}\n            sections={groupedSections[code]}\n            onSectionToggle={onSectionToggle}\n        />\n    )))\n  }, [language, trees, sections])\n\n  return (\n    <div className=\"SuggestionsContainer\">\n      <div className=\"TopSection\">\n        <h1># Project Name</h1>\n        <p>&gt; tagline</p>\n        <p>![header](image)\n          {Object.keys(sections)?.length}</p>\n      </div>\n      {\n        typeSections\n      }\n    </div>\n  );\n}\n\nSuggestionsContainer.propTypes = {\n  onSectionToggle: PropTypes.func.isRequired,\n  language: PropTypes.string.isRequired,\n};\n\n\nexport default SuggestionsContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { sectionURL } from '../../../common/ReadmeParser';\nimport './READMEContainer.css';\n\nfunction markdownHeaderToHTML(section) {\n  const title = section.sectionTitle;\n  const level = section.headingLevel;\n  const markdownTitle = `${'#'.repeat(level)} ${title}`;\n  const key = `${title}-${level}`;\n\n  let header;\n  switch (level) {\n    case 1:\n      header = <h1 key={key}>{markdownTitle}</h1>;\n      break;\n    case 2:\n      header = <h2 key={key}>{markdownTitle}</h2>;\n      break;\n    case 3:\n      header = <h3 key={key}>{markdownTitle}</h3>;\n      break;\n    case 4:\n      header = <h4 key={key}>{markdownTitle}</h4>;\n      break;\n    case 5:\n      header = <h5 key={key}>{markdownTitle}</h5>;\n      break;\n    case 6:\n      header = <h6 key={key}>{markdownTitle}</h6>;\n      break;\n    default:\n      console.log(`Unexpected headingLevel ${level}`);\n  }\n\n  const exampleURL = sectionURL(section)[0];\n  const exampleLink = (\n    <a\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n      href={exampleURL}\n    >\n      [//]: # (\n      {exampleURL}\n      )\n    </a>\n  );\n\n  return (\n    <div key={key}>\n      {header}\n      {exampleLink}\n    </div>\n  );\n}\n\nfunction downloadMarkdownFile() {\n  const element = document.createElement('a');\n  const file = new Blob([document.getElementById('READMEcontent').innerText], { type: 'text/plain' });\n  element.href = URL.createObjectURL(file);\n  element.download = 'README.md';\n  document.body.appendChild(element); // Required for this to work in FireFox\n  element.click();\n}\n\nconst READMEContainer = ({ selectedSections }) => (\n  <div className=\"READMEContainer\">\n    <button type=\"button\" onClick={downloadMarkdownFile}>Download</button>\n    <div id=\"READMEcontent\">\n      <div className=\"TopSection\">\n        <h1># Project Name</h1>\n        <p>&gt; tagline</p>\n        <p>![header](image)</p>\n      </div>\n      {\n        selectedSections.map(section => markdownHeaderToHTML(section))\n      }\n    </div>\n  </div>\n);\n\nREADMEContainer.propTypes = {\n  selectedSections: PropTypes.arrayOf(\n    PropTypes.shape({\n      sectionTitle: PropTypes.string.isRequired,\n      headingLevel: PropTypes.number.isRequired,\n      readmes: PropTypes.PropTypes.arrayOf(PropTypes.string).isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default READMEContainer;\n","import Swal from 'sweetalert2';\n\nexport const alertError = (title, text, footer) => {\n  Swal.fire({\n    icon: 'error',\n    title: title || 'Oops...',\n    text: text || 'Something went wrong!',\n    footer: footer || false,\n  });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Loading(props) {\n  const { hide, className } = props;\n\n  if (hide) return <React.Fragment />;\n\n  return (\n    <div className={className ? `${className} loader-container` : 'loader-container'}>\n      <div className=\"loader\" />\n    </div>\n  );\n}\n\nLoading.propTypes = {\n  hide: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  hide: false,\n  className: '',\n};\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Composer.css';\nimport ReactGA from 'react-ga';\nimport About from '../About/About';\nimport SuggestionsContainer from './SuggestionsContainer/SuggestionsContainer';\nimport READMEContainer from './READMEContainer/READMEContainer';\nimport isEqual from '../../common/Extensions';\nimport { alertError } from '../../common/alerts';\nimport Loading from '../../common/loading.jsx';\n\nclass Composer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedSections: [],\n      sectionsLoaded: false,\n      treesLoaded: false,\n      sections: [],\n      trees: {},\n    };\n    this.ref = React.createRef();\n    const { match: { params: { language } } } = props;\n    ReactGA.pageview(`composer/${language}`);\n  }\n\n  componentDidMount() {\n    const { match: { params: { language } } } = this.props;\n    fetch(`${process.env.REACT_APP_BACKEND_URL}files/trees/${language}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            treesLoaded: true,\n            trees: result,\n          });\n        },\n        (error) => {\n          alertError('Language not processed yet', 'Please, try again in a few minutes while the language is been processed.');\n          console.error(error);\n          this.setState({\n            treesLoaded: true,\n            trees: {},\n          });\n        },\n      );\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}files/sections/${language}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            sectionsLoaded: true,\n            sections: result,\n          });\n        },\n        (error) => {\n          console.error(error);\n          alertError('Language not processed yet', 'Please, try again in a few minutes while the language is been processed.');\n          this.setState({\n            sectionsLoaded: true,\n            sections: [],\n          });\n        },\n      );\n\n    fetch(`${process.env.REACT_APP_BACKEND_URL}${language}`)\n      .then(res => res.body)\n      .then(\n        () => {},\n        (error) => {\n          console.error(error);\n          alertError(false, 'Could not connect to WRITEME server');\n        },\n      );\n  }\n\n  sectionIndex(section) {\n    const { selectedSections } = this.state;\n    return selectedSections.findIndex(selectedSection => isEqual(section, selectedSection));\n  }\n\n  toggleSection(toggledSection) {\n    const { selectedSections } = this.state;\n    const sectionIndex = this.sectionIndex(toggledSection);\n\n    if (sectionIndex === -1) {\n      selectedSections.push(toggledSection);\n    } else {\n      selectedSections.splice(sectionIndex, 1);\n    }\n\n    this.setState({\n      selectedSections,\n    });\n  }\n\n  render() {\n    const {\n      selectedSections, trees, sections, sectionsLoaded, treesLoaded,\n    } = this.state;\n    const { match: { params: { language } } } = this.props;\n    const loading = !sectionsLoaded || !treesLoaded;\n    const numRepos = Object.keys(trees).length;\n\n    return (\n      <div key={this.ref}>\n        <About numRepos={`${numRepos}`} />\n        <Loading hide={!loading} className=\"Composer\" />\n        {!loading && (\n        <div className=\"Composer\">\n          <SuggestionsContainer\n            sections={sections}\n            trees={trees}\n            language={language}\n            onSectionToggle={section => this.toggleSection(section)}\n          />\n          <READMEContainer selectedSections={selectedSections} />\n        </div>\n        )}\n      </div>\n    );\n  }\n}\n\nComposer.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      language: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default Composer;\n","/* eslint-disable no-console, no-param-reassign, no-use-before-define  */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  Switch, Route, HashRouter,\n} from 'react-router-dom';\nimport ReactGA from 'react-ga';\nimport './index.css';\nimport Composer from './pages/Composer/Composer';\nimport About from './pages/About/About';\nimport * as serviceWorker from './serviceWorker';\n\n\nfunction App() {\n  ReactGA.initialize('UA-144891941-1');\n  ReactGA.pageview('/');\n\n  return (\n    <HashRouter basename={`${process.env.PUBLIC_URL}/`} onUpdate={() => window.scrollTo(0, 0)}>\n      <Switch>\n        <Route path=\"/\" exact component={About} />\n        <Route path=\"/composer/:language\" component={Composer} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}